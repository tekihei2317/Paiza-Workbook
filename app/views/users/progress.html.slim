.progress-wrapper
  .container
    .row
      .pies-container.shadow.bg-my-white.col-lg-10.offset-lg-1
        .row
          - Problem.ranks.each do |rank_str, rank_int|
            .pie-container.col-md-4.col-sm-6
              p.pie-title.text-center.mb-1= format("Rank %s", rank_str)
              - data = @data[rank_int]
              = pie_chart data, width: '200px', height: '200px', display: 'inline-block',\
                legend: false, colors: ['#4285F4', '#bbdefb', '#E7E9F2'], class: 'mx-auto'
              p.text-center.mb-5= format("%d問挑戦済み | 残り%d問", data[:perfect] + data[:'not perfect'], data[:unchallenged])
              
    
            
    .row.mt-3
      .table-responsive.shadow.bg-my-white.col-lg-10.offset-lg-1
        - boundaries=[0,1000,1200,1400,1600,1800,2000,2200,2400,3000]
        table.table.text-nowrap
          tr
            th 難易度
            - boundaries.each.with_index do |b_crt, i|
              - break if i == boundaries.size - 1
              - b_nxt=boundaries[i + 1]
              th= "~#{b_nxt}"
            th 合計
          tr
            td 問題数
            - boundaries.each.with_index do |b_crt, i|
              - break if i == boundaries.size - 1
              - b_nxt=boundaries[i + 1]
              td= Problem.where(difficulty: (b_crt+1)..b_nxt).count
            td= Problem.count
          tr
            td 挑戦済み
            - all_challenges = Solved.where(user_id: current_user.id).uniq { |solved| solved.problem.id }
            - boundaries.each.with_index do |b_crt, i|
              - break if i == boundaries.size - 1
              - b_nxt=boundaries[i + 1]
              td= all_challenges.filter { |solved| (b_crt+1..b_nxt).include?(solved.problem.difficulty) }.count
            td= all_challenges.count

    .row.mt-3
      .table-responsive.shadow.bg-my-white.col-lg-10.offset-lg-1
        table.table
          tr
            th 問題ID
            th 問題名
            th 日時
          - @solved_problems.each do |problem|
            tr
              td= format("%c%03d", problem.rank, problem.number)
              td= problem.name
              td= Date.today
        = paginate @solved_problems
